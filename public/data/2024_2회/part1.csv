문제,보기1,보기2,보기3,보기4,정답,해설
"요구공학(Requirements Engineering)에 대한 설명으로 옳지 않은 것은?","무엇을 개발해야 하는지 요구사항을 정의하고, 분석 및 관리하는 프로세스를 연구하는 학문이다.","사용자 요구사항이 더욱 복잡해지고 잦은 변경이 발생하자 이를 적절하게 관리하기 위해 등장하였다.","요구사항 개발의 한 요소이다.","품질 개선과 프로젝트 실패의 최소화를 목적으로 한다.",③,"요구공학은 요구사항 개발보다 더 큰 범주에 해당하므로 요구사항 개발이 요구공학의 한 요소가 됩니다."
"XP(eXtreme Programming)에 대한 설명으로 옳지 않은 것은?","릴리즈 기간을 짧게 반복하여 고객의 요구 변화에 빠르게 대응한다.","코드들은 하나의 작업이 마무리될 때마다 지속적으로 통합한다.","테스트가 지속적으로 진행될 수 있도록 테스트 자동화 도구를 사용한다.","개발 책임자가 모든 책임을 가지므로 팀원들은 책임 없이 자유로운 개발이 가능하다.",④,"XP는 다른 사람과 함께 프로그래밍을 수행함으로써 개발에 대한 책임을 공동으로 나눠 갖는 환경을 조성합니다."
"UML에서 활용되는 다이어그램의 이름과 설명의 연결이 올바르지 않은 것은?","클래스 다이어그램 : 시퀀스 다이어그램과 같이 동작에 참여하는 객체들이 주고받는 메시지를 표현하는데, 메시지뿐만 아니라 객체들 간의 연관까지 표현한다.","배치 다이어그램 : 결과물, 프로세스, 컴포넌트 등 물리적 요소들의 위치를 표현한다.","유스케이스 다이어그램 : 사용자의 요구를 분석하는 것으로, 기능 모델링 작업에 사용한다.","활동 다이어그램 : 시스템이 어떤 기능을 수행하는지, 객체의 처리 로직이나 조건에 따른 처리의 흐름을 순서에 따라 표현한다.",①,"클래스 다이어그램은 클래스와 클래스가 가지는 속성, 클래스 사이의 관계를 표현하는 다이어그램입니다. ①번은 커뮤니케이션 다이어그램에 대한 설명입니다."
"다음 설명에 해당하는 도표는?
시스템의 기능을 여러 개의 고유 모듈들로 분할하여 이들 간의 인터페이스를 계층 구조로 표현한 것으로, 가시적 도표(Visual Table of Contents), 총체적 도표(Overview Diagram), 세부적 도표(Detail Diagram)가 있다.","Flow Chart","Burn-down Chart","Visual Diagram","HIPO Chart",④,"문제의 지문은 HIPO 차트에 대한 설명입니다."
"불필요한 메모리의 낭비를 최소화하기 위해 여러 프로세스가 동시에 참조할 수는 없지만 어디서든 참조할 수 있는 객체를 생성하는 디자인 패턴은?","싱글톤 패턴(Singleton)","옵서버 패턴(Observer)","프로토타입 패턴(Prototype)","상태 패턴(State)",①,"여러 프로세스가 동시에 참조할 수는 없지만 어디서든 참조할 수 있는 객체를 생성하는 디자인 패턴은 싱글톤 패턴(Singleton)입니다. ▪ 옵서버 패턴(Observer) : 한 객체의 상태가 변화하면 객체에 상속되어 있는 다른 객체들에게 변화된 상태를 전달하는 패턴 ▪ 프로토타입 패턴(Prototype) : 원본 객체를 복제하는 방법으로 객체를 생성하는 패턴 ▪ 상태 패턴(State) : 객체의 상태에 따라 동일한 동작을 다르게 처리해야 할 때 사용하는 패턴"
"객체지향 기법에서 객체가 메시지를 받아 실행해야 할 객체의 구체적인 연산을 정의한 것은?","Entity","Method","Instance","Class",②,"객체지향 기법에서 객체가 메시지를 받아 실행해야 할 객체의 구체적인 연산을 정의한 것을 메소드(Method)라 합니다. ▪ 개체(Entity) : 사람, 자동차, 컴퓨터, 고양이 등과 같이 우리 주위에서 사용되는 물질적이거나 개념적인 것을 의미함 ▪ 인스턴스(Instance) : 클래스에 속한 각각의 객체를 인스턴스라 하며, 클래스로부터 새로운 객체를 생성하는 것을 인스턴스화(Instantiation)라 함 ▪ 클래스(Class) : 공통된 속성과 연산(행위)을 갖는 객체의 집합으로, 객체의 일반적인 타입(Type)을 의미함"
"바람직한 소프트웨어 설계 지침이 아닌 것은?","결합도를 최소화하고 응집도를 최대화한다.","복잡도와 중복성을 줄이고 일관성을 유지시킨다.","하나의 입구와 하나의 출구를 갖도록 해야 한다.","모듈의 크기를 가능한 작게 구성하여 병행성 수준을 높여야 한다.",④,"모듈 크기는 시스템의 전반적인 기능과 구조를 이해하기 쉬운 크기로 분해해야 합니다."
"객체지향 설계 원칙에 대한 설명 중 틀린 것은?","OCP : 기존의 코드를 변경하지 않고 기능을 추가할 수 있도록 설계해야 한다는 원칙","LSP : 자식 클래스는 최소한 자신의 부모 클래스에서 가능한 행위는 수행할 수 있어야 한다는 설계 원칙","DIP : 각 객체들 간의 의존 관계가 성립될 때, 추상성이 낮은 클래스보다 추상성이 높은 클래스와 의존 관계를 맺어야 한다는 원칙","ISP : 객체는 단 하나의 책임만 가져야 한다는 원칙",④,"인터페이스 분리 원칙(ISP)은 자신이 사용하지 않는 인터페이스와 의존 관계를 맺거나 영향을 받지 않아야 한다는 원칙입니다. ④번은 단일 책임 원칙(SRP)에 대한 설명입니다."
"객체지향 분석 방법론 중 미시적(Micro) 개발 프로세스와 거시적(Macro) 개발 프로세스를 모두 사용하는 분석 방법으로, 클래스와 객체들을 분석 및 식별하고 클래스의 속성과 연산을 정의하는 것은?","Coad와 Yourdon 방법","Booch 방법","Jacobson 방법","Wirfs-Brocks 방법",②,"미시적 개발 프로세스와 거시적 개발 프로세스를 모두 사용하는 객체지향 분석 방법은 Booch 방법입니다. ▪ Coad와 Yourdon 방법 : E-R 다이어그램을 사용하여 객체의 행위를 모델링하며, 객체 식별, 구조 식별, 주제 정의, 속성과 인스턴스 연결 정의, 연산과 메시지 연결 정의 등의 과정으로 구성하는 기법 ▪ Jacobson 방법 : Use Case를 강조하여 사용하는 분석 방법입니다. ▪ Wirfs-Brock 방법 : 분석과 설계 간의 구분이 없고 고객 명세서를 평가해서 설계 작업까지 연속적으로 수행하는 기법입니다."
"HIPO Chart에 대한 설명으로 틀린 것은?","HIPO 차트 종류에는 가시적 도표, 총체적 도표, 세부적 도표가 있다.","충분한 사전 지식과 학습이 없으면 이해하기 어렵다.","기능과 자료의 의존 관계를 동시에 표현할 수 있다.","하향식 소프트웨어 개발을 위한 문서화 도구이다.",②,"HIPO(Hierarchy Input Process Output)는 시스템의 분석 및 설계나 문서화할 때 사용되는 기법으로, 기호나 도표 등을 사용하므로 보기 쉽고 이해하기도 쉽다는 특징이 있습니다."
"코드 설계에서 코드화 대상 항목의 성질, 즉 길이, 넓이, 부피, 지름, 높이 등의 물리적 수치를 그대로 코드에 적용시키는 방식의 코드는?","연상 코드","블록 코드","순차 코드","표의 숫자 코드",④,"표의 숫자 코드(Significant Digit Code)는 코드화 대상 항목의 성질, 즉 길이, 넓이, 부피, 지름, 높이 등의 물리적 수치를 그대로 코드에 적용시키는 방법입니다."
"애자일 소프트웨어 개발 기법의 가치가 아닌 것은?","계획을 따르기보다는 변화에 대응하는 것에 더 가치를 둔다.","실제 작동하는 소프트웨어보다는 이해하기 좋은 문서에 더 가치를 둔다.","계약 협상보다는 고객과의 협업에 더 가치를 둔다.","프로세스와 도구보다는 개인과 상호작용에 더 가치를 둔다.",②,"애자일(Agile)은 방대한 문서보다는 실행되는 SW에 더 가치를 둡니다."
"Rayleigh-Norden 곡선의 노력 분포도를 이용한 프로젝트 비용 산정 기법은?","Putnam 모형","델파이 모형","COCOMO 모형","기능점수 모형",①,"문제에서 설명하는 내용은 Putnam 모형입니다. ▪ 델파이 모형 : 전문가 감정 기법의 주관적인 편견을 보완하기 위해 많은 전문가의 의견을 종합하여 산정하는 기법 ▪ COCOMO 모형 : 보헴(Boehm)이 제안한 것으로 원시 프로그램의 규모인 원시 코드 라인 수(LOC)에 의한 비용 산정 기법 ▪ 기능점수 모형 : 알브레히트(Albrecht)가 제안한 것으로, 소프트웨어의 기능을 증대시키는 요인별로 가중치를 부여하고, 요인별 가중치를 합산하여 총 기능 점수를 산출하며, 총 기능 점수와 영향도를 이용하여 기능 수(FP)를 구한 후 이를 이용해서 비용을 산정하는 기법"
"객체지향의 주요 개념에 대한 설명으로 틀린 것은?","상속은 상위 클래스에서 속성이나 연산을 전달받아 새로운 형태의 클래스로 확장하여 사용하는 것을 의미한다.","객체는 실세계에 존재하거나 생각할 수 있는 것을 말한다.","캡슐화는 두 개 이상의 객체(클래스)들이 상호 참조하는 관계이다.","다형성은 상속받은 여러 개의 하위 객체들이 다른 형태의 특성을 갖는 객체로 이용될 수 있는 성질이다.",③,"캡슐화는 데이터(속성)와 데이터를 처리하는 함수를 하나로 묶어 인터페이스를 제외한 세부 내용을 은폐(정보 은닉)함으로써 외부에서의 접근을 제한하는 것입니다. 두 개 이상의 객체(클래스)들이 상호 참조하는 관계는 연관성입니다."
"WAS(Web Application Server)에 대한 설명으로 틀린 것은?","정적인 콘텐츠를 처리하기 위해 사용되는 미들웨어이다.","클라이언트/서버 환경보다는 웹 환경을 구현하기 위한 미들웨어이다.","미션 크리티컬한 기업 업무도 JAVA, EJB 컴포넌트 기반으로 구현이 가능하다.","대표적인 WAS의 종류에는 오라클의 WebLogic, IBM의 WebSphere 등이 있다.",①,"웹 애플리케이션 서버(WAS; Web Application Server)는 동적인 콘텐츠를 처리하기 위해 사용되는 미들웨어입니다. 정적인 콘텐츠를 처리하는 것은 웹 서버(Web Server)입니다."
"유스케이스 다이어그램(Use Case Diagram)의 구성 요소가 아닌 것은?","System","Actor","Operation","UseCase",③,"유스케이스 다이어그램은 시스템(시스템 범위), 액터, 유스케이스, 관계로 구성됩니다."
"폭포수 모형의 특징으로 거리가 먼 것은?","순차적인 접근방법을 이용한다.","나선형 모형의 단점을 보완하기 위한 모형이다.","단계적 정의와 산출물이 명확하다.","모형의 적용 경험과 성공사례가 많다.",②,"폭포수 모형은 전통적인, 즉 초기 형태의 생명 주기 모형으로, 나선형 모형보다 앞서 소개되었습니다."
"송수신 데이터의 처리 방식 중 대량의 데이터를 처리할 때 사용하는 방식은?","실시간 방식","분산 처리 방식","배치 방식","지연 처리 방식",③,"대량의 송수신 데이터를 처리할 때 사용하는 방식은 배치 방식입니다."
"결합도(Coupling)에 대한 설명으로 틀린 것은?","데이터 결합도(Data Coupling)는 두 모듈이 매개 변수로 자료를 전달할 때 자료 구조 형태로 전달되어 이용될 때 데이터가 결합되어 있다고 한다.","내용 결합도(Content Coupling)는 하나의 모듈이 직접적으로 다른 모듈의 내용을 참조할 때 두 모듈은 내용적으로 결합되어 있다고 한다.","공통 결합도(Common Coupling)는 두 모듈이 동일한 전역 데이터를 접근한다면 공통 결합되어 있다고 한다.","결합도(Coupling)는 두 모듈 간의 상호작용, 또는 의존도 정도를 나타내는 것이다.",①,"데이터 결합도는 모듈 간의 인터페이스가 자료 요소로만 구성될 때의 결합도입니다. ①번은 스탬프 결합도에 대한 설명입니다."
"CASE(Computer Aided Software Engineering)의 주요 기능으로 옳지 않은 것은?","S/W 라이프 사이클 전 단계의 연결","그래픽 지원","다양한 소프트웨어 개발 모형 지원","언어 번역",④,"CASE의 주요 기능에는 소프트웨어 생명 주기 전 단계의 연결, 다양한 소프트웨어 개발 모형 지원, 그래픽 지원 등이 있습니다."
