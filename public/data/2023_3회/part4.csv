문제,보기1,보기2,보기3,보기4,정답,해설
"UNIX의 쉘(Shell)에 관한 설명으로 옳지 않은 것은?","명령어 해석기이다.","시스템과 사용자 간의 인터페이스를 담당한다.","여러 종류의 쉘이 있다.","프로세스, 기억장치, 입출력 관리를 수행한다.",④,"쉘(Shell)은 명령어 해석기 역할을 하며, 시스템-사용자 인터페이스, 다양한 종류가 있습니다. 하지만 프로세스/기억장치/입출력 관리는 '커널(Kernel)'이 담당합니다."
"다음 내용이 설명하는 소프트웨어 취약점은?  
메모리를 다루는 데 오류가 발생하여 잘못된 동작을 하는 프로그램 취약점","바운스 공격","SQL 삽입","버퍼 오버플로","디렉토리 접근 공격",③,"'버퍼 오버플로(buffer overflow)'는 메모리 경계 밖의 데이터를 다루는 오류로 이상 동작·취약점이 발생합니다."
"Java에서 사용되는 출력 함수가 아닌 것은?","System.out.print()","System.out.println()","System.out.printing()","System.out.printf()",③,"'System.out.printing()'은 존재하지 않는 함수명입니다."
"결합도가 낮은 것부터 높은 순으로 옳게 나열한 것은?  
ㄱ.내용 결합도  ㄴ.자료 결합도  ㄷ.공통 결합도  ㄹ.스탬프 결합도  
ㅁ.외부 결합도  ㅂ.제어 결합도",  
"ㄴ → ㄹ → ㅁ → ㅂ → ㄷ → ㄱ","ㄴ → ㄹ → ㅂ → ㅁ → ㄷ → ㄱ","ㄴ → ㄹ → ㅁ → ㅂ → ㄱ → ㄷ","ㄱ → ㄴ → ㄹ → ㅂ → ㅁ → ㄷ",③,"결합도가 낮은 순서: 자료(Data)→스탬프(Stamp)→외부(External)→제어(Control)→공통(Common)→내용(Content)입니다."
"OSI 7 계층 중 네트워크 계층에 대한 설명으로 틀린 것은?","패킷을 발신지로부터 최종 목적지까지 전달하는 책임을 진다.","한 노드로부터 다른 노드로 프레임을 전송하는 책임을 진다.","패킷에 발신지와 목적지의 논리 주소를 추가한다.","라우터 또는 교환기는 패킷 전달을 위해 경로를 지정하거나 교환 기능을 제공한다.",②,"②번은 '데이터 링크 계층'의 특징입니다. '네트워크 계층'은 패킷 전송(논리주소 포함), 경로 지정, 라우터 포함 등입니다."
"C 언어 프로그램이 실행되었을 때의 결과는?
#include <stdio.h>
int main(void) {
    int a = 3, b = 4, c = 2;
    int r1, r2, r3;
    r1 = b <= 4 || c == 2;
    r2 = (a > 0) && (b < 5);
    r3 = !c;
    printf(\"%d\", r1+r2+r3);
    return 0;
}",  
"0","1","2","3",③,"r1: b<=4=1(true), r2: a>0=1 and b<5=1 → 1, r3: !2=0\n→ 1+1+0=2, 따라서 정답은 2."
"TCP/IP 계층 구조에서 IP의 동작 과정에서 전송 오류가 발생하는 경우에 대비해 오류 정보를 전송하는 목적으로 사용하는 프로토콜은?","ECP(Error Checking Protocol)","ARP(Address Resolution Protocol)","ICMP(Internet Control Message Protocol)","PPP(Point-to-Point Protocol)",③,"ICMP는 인터넷 제어 메시지 프로토콜로, 네트워크 오류/제어 메시지(에러, 경고 등)을 주고받는 데 이용됩니다."
"UNIX 운영체제에 관한 특징으로 틀린 것은?","하나 이상의 작업에 대하여 백그라운드에서 수행이 가능하다.","Multi-User는 지원하지만 Multi-Tasking은 지원하지 않는다.","트리 구조의 파일 시스템을 갖는다.","이식성이 높으며 장치 간 호환성이 높다.",②,"UNIX 운영체제는 '멀티유저(Multi-User)'뿐 아니라 '멀티태스킹(Multi-Tasking)'도 지원합니다."
"3개의 보관 구조를 가지는 주기억장치가 있으며,  
다음의 순서로 페이지 참조가 발생할 때 페이지 교체 알고리즘을 'FIFO' 방식으로 사용할 경우 마지막 페이지 값으로 옳은 것은?
페이지 순서: 1, 2, 3, 2, 4, 2, 3, 1, 3",  
"4, 2, 3","4, 1, 3","1, 2, 3","1, 4, 2",②,"FIFO(선입선출)로 순차적으로 삽입/교체하면, 마지막 프레임 3개는 4,1,3이 남습니다."
"TCP/IP 프로토콜에서 TCP가 해당하는 계층은?","데이터 링크 계층","네트워크 계층","트랜스포트 계층","세션 계층",③,"TCP(Transmission Control Protocol)는 OSI 7계층의 전송 계층(Transport Layer) 프로토콜에 해당합니다."
"OSI 7계층 모델에서 전송에 필요한 장치 간의 실제 접속과 절단 등 기계적/전기적/기능적/절차적 특성을 정의한 계층은?","물리 계층","데이터 링크 계층","네트워크 계층","전송 계층",①,"물리 계층(Physical Layer)은 하드웨어 신호(전기적, 물리적), 접속 방식, 절단 등 하드웨어적 특성 정의 계층입니다."
"다음 JAVA 프로그램이 실행되었을 때의 결과는?
public class ovr {
    public static void main(String[] args) {
        int a = 1, b = 2, c = 3, d = 4;
        int mx, mn;
        mx = a < b ? b : a;
        if (mx == 1) {
            mn = a > mx ? b : a;
        }
        else {
            mn = b < mx ? d : c;
        } 
        System.out.println(mn);
    }
}
",  
"1","2","3","4",③,"mx=a<b?b:a → a=1,b=2 ⇒ mx=2\nmx==1 아니므로 else문, b<mx?d:c → 2<2 false…c(=3) 출력"
"메모리 관리 기법 중 Worst Fit 방법을 사용할 경우 10K 크기의 프로그램 실행을 위해서는 어느 부분에 할당되는가?
영역 번호 | 메모리 크기 | 사용 여부
NO.1 | 8K  | FREE
NO.2 | 12K | FREE
NO.3 | 10K | IN USE
NO.4 | 20K | IN USE
NO.5 | 16K | FREE",  
"NO.2","NO.3","NO.4","NO.5",④,"Worst Fit은 가장 큰(가장 많이 남는) 메모리 영역을 찾으므로, 16K FREE인 NO.5가 선택됩니다."
"응집도의 종류 중 서로 간에 어떠한 의미 있는 연관 관계도 지니지 않은 기능 요소로 구성되는 경우이며, 서로 다른 상위 모듈에 의해 호출되어 처리 상의 연관성이 없는 서로 다른 기능을 수행하는 경우의 응집도는?","Functional Cohesion","Sequential Cohesion","Logical Cohesion","Coincidental Cohesion",④,"Coincidental Cohesion(우연적 응집도)은 가장 낮은 단계로, 의미없는 임의의 기능들의 집합입니다."
"다음은 파이썬으로 만들어진 반복문 코드이다. 이 코드의 결과는?
>> while(True) :
     print('A')
     print('B')
     print('C')
     continue
     print('D')",  
"출력이 반복된다 A, B, C.","A, B, C","출력이 반복된다 A, B, C, D.","A, B, C, D 까지만 출력된다",①,"continue 이후 print('D')를 실행하지 않고, A, B, C만 무한반복 출력됩니다."
"C 언어에서 연산자 우선순위가 높은 것에서 낮은 것으로 바르게 나열된 것은?
㉠ ( )  ㉡ ==  ㉢ <  ㉣ <<  ㉤ ||  ㉥ /","㉠ ㉥ ㉣ ㉢ ㉡ ㉤","㉠ ㉣ ㉥ ㉢ ㉡ ㉤","㉠ ㉣ ㉥ ㉢ ㉤ ㉡","㉠ ㉥ ㉣ ㉤ ㉡ ㉢",①,"C언어 연산자 우선순위는 () > / > << > < > == > || 입니다. ㉠→㉥→㉣→㉢→㉡→㉤"
"모듈화(Modularity)와 관련한 설명으로 틀린 것은?","소프트웨어의 모듈은 프로그래밍 언어에서 Subroutine, Function 등으로 표현될 수 있다.","모듈의 수가 증가하면 상대적으로 각 모듈의 크기가 커지며 모듈 사이의 상호교류가 감소하여 과부하(Overload) 현상이 나타난다.","모듈화는 시스템을 지능적으로 관리할 수 있도록 해 주며 복잡도 문제를 해결하는 데 도움을 준다.","모듈화는 시스템의 유지보수와 수정을 용이하게 한다.",②,"모듈 수가 증가할수록 오히려 각 모듈의 크기는 줄고(작고 효율적), 상호작용은 체계적으로 관리되어 과부하는 덜 합니다."
"C 언어에서 정수 변수 a, b에 각각 1, 2가 저장되어 있을 때 다음 식의 연산 결과로 옳은 것은?
a < b + 2 && a << 1 <= b","0","1","3","5",②,"a<b+2: 1<4=1, a<<1=2, 2<=2=1, 1&&1=1"
"a[0]의 주소 값이 10일 경우 다음 C 언어 프로그램이 실행되었을 때의 결과는? (단, int형의 크기는 4Byte로 가정한다)
#include <stdio.h>
int main(int argc, char* argv[]) {
    int a[] = { 14,22,30,38 };
    printf(\"%u, \", &a[2]);
    printf(\"%u\", a);
    return 0;
}
",  
"14, 10","14, M","18, 10","18, M",③,"a의 시작주소=10, int 크기=4B, a[2]는 10+(2*4)=18. &a[2]=18, a=10이므로 18, 10"
"C 언어 라이브러리 중 stdlib.h에 대한 설명으로 옳은 것은?","문자열을 수치 데이터로 바꾸는 문자 변환함수와 수치를 문자열로 바꿔주는 변환함수 등이 있다.","문자열 처리 함수로 strlen( )이 포함되어 있다.","표준 입출력 라이브러리이다.","삼각 함수, 제곱근, 지수 등 수학적인 함수를 내장하고 있다.",①,"stdlib.h에는 atoi, itoa 등 변환 함수 포함. ②는 string.h, ③은 stdio.h, ④는 math.h에 대한 설명입니다."
