문제,보기1,보기2,보기3,보기4,정답,해설
"응집도의 종류 중 서로 간에 어떠한 의미 있는 연관 관계도 지니지 않은 기능 요소로 구성되는 경우이며, 서로 다른 상위 모듈에 의해 호출되어 처리 상의 연관성이 없는 서로 다른 기능을 수행하는 경우의 응집도는?","Functional Cohesion","Sequential Cohesion","Logical Cohesion","Coincidental Cohesion",④,"Coincidental Cohesion(우연적 응집도)은 의미있는 연관 없이 우연히 묶여 있는 모듈의 집합으로, 응집도의 가장 낮은 단계입니다."
"Java에서 try ~ catch 문을 사용할 때, 예외 발생 시 예외 처리를 위해 반드시 포함되어야 하는 것은?","try{} finally{}","try{} throw{}","try{} catch{} finally{}","try{} catch{}",④,"try~catch 문에서는 반드시 try블록과 catch블록이 있어야 하고, finally는 선택사항입니다."
"프로젝트 관리에서 사용되는 WBS(Work Breakdown Structure)와 관련된 설명으로 옳지 않은 것은?","프로젝트를 구성하는 작업을 세분화하여 구조화한 것이다.","전체 작업을 체계적으로 분할해 상호 연관성/순서를 명확히 한다.","프로젝트 전체 일정/공수를 추정하는 데 도움을 준다.","마일스톤(Milestone) 단위로 세분화하여 일정관리만 가능하다.",④,"WBS는 일정관리 이외에도 범위, 인력, 공정, 예산 등 다양한 관리 지표 산정에 활용됩니다. 마일스톤 단위로만 세분화하지도 않습니다."
"소프트웨어 개발 모델 중 나선형(Spiral) 모델에 대한 설명으로 틀린 것은?","비교적 대규모 시스템에 적합하다.","개발 순서는 계획 및 정의, 위험 분석, 공학적 개발, 고객 평가 순으로 진행된다.","소프트웨어를 개발하면서 발생할 수 있는 위험을 관리하고 최소화하는 것을 목적으로 한다.","계획, 설계, 개발, 평가의 개발 주기가 한 번만 수행된다.",④,"나선형(Spiral) 모델은 여러 번 반복 주기를 가지면서 새로운 요구나 위험을 반영, 수정하는 모델로, 한 번만 수행되는 모델이 아닙니다."
"RFI(Request for Information)에 대한 설명으로 옳지 않은 것은?","벤더에 시스템 설명서, 설치 설명서 등의 정보를 요청하는 공식 업무 문서다.","프로젝트의 수행을 위해 필요한 역량, 경험 등에 관한 자격을 심사하는 문서다.","RFP(Request for Proposal)와는 별도로 벤더들에게 사전 정보를 요구하는 목적이다.","최종 벤더 선정 단계에서 모든 견적/제안서 평가 목적만으로 진행하는 것이다.",④,"RFI는 최종 벤더 선정 직전 '평가' 용도만이 아니라, 사전 정보 파악·시장조사 등 초반 단계에서 주요 벤더 탐색에도 활용됩니다."
"OSI 7계층 중 전송 계층(Transport Layer)의 주요 부담 책임이 아닌 것은?","프로세스 간 신뢰성 보장","패킷의 논리적 경로 설정","데이터 흐름제어","에러 검출",②,"2번(패킷의 논리적 경로 설정)은 주로 네트워크 계층의 책임입니다."
"IPv6 주소 표기 방식 중 올바르지 않은 것은?","2001:0db8:0000:0042:0000:8a2e:0370:7334","2001:db8:0:42:0:8a2e:370:7334","2001:0db8::8a2e:0370:7334","2001:0db8:0:42:0:8a2e:370:7334:1",④,"IPv6 주소는 8필드(16비트씩)로 구성해야 하며, ④는 9필드이므로 잘못된 표기입니다."
"스크립트 언어에 대한 설명으로 옳지 않은 것은?","인터프리터(Interpreter)를 통해 한 줄씩 해석/실행된다.","코드가 쉬워 생산성이 높고 이식성이 우수하다.","운영체제(OS) 내장 명령으로만 사용된다.","HTML, Python 등은 대표적 예이다.",③,"스크립트 언어는 OS 내장 명령(셸, 배치) 외에도 다양한 프로그램 내 포함, 단독 사용도 하며, OS 내장만으로 제한되지 않습니다."
"다음 코드를 실행했을 때 올바른 출력 결과는?
int i = 0;
for (i = 0; i < 5; i++);
    printf(\"%d \", i);","0 1 2 3 4","5 ","1 2 3 4 5","0 1 2 3 4 5",②,"for문 끝에 세미콜론이 있어 빈 반복만 수행, 이후 printf에서 i 값은 5가 되어 5만 출력됩니다."
"페이지 교체 알고리즘 FIFO 방식에서, 3프레임, 참조열이 1 2 3 4 1 2 5 1 2 3 4 5일 때 최종 3프레임의 페이지는?","3, 4, 5","1, 2, 3","4, 5, 3","3, 4, 5",④,"FIFO로 교체할 경우 최종적으로 3-4-5 순서가 남습니다."
"시스템 카탈로그(System Catalog)와 관련한 설명으로 틀린 것은?","모든 테이블/인덱스 등 객체 구조를 저장한다.","시스템 자체에 의해 관리/생성되는 특수한 테이블의 모임이다.","일반 사용자도 insert로 직접 수정할 수 있다.","시스템의 메타데이터(정보)를 포함한다.",③,"카탈로그는 일반 사용자가 직접 update, insert로 수정할 수 없습니다(시스템 관리/운영자만)."
"논리 데이터 모델링의 특징으로 옳지 않은 것은?","데이터 타입, 제약조건 및 기본키 등의 속성을 기술한다.","기존 비즈니스 업무의 핵심 정보와 구조를 정의한다.","물리적 저장 구조, 인덱스 등 구현설계까지 포함한다.","ERD(Entity-Relationship Diagram)나 논리적 구조표로 주로 표현한다.",③,"물리적 저장 구조/인덱스 등은 물리 데이터모델 설계 단계에서 다룹니다."
"트랜잭션의 상태 중 트랜잭션의 마지막 연산이 실행된 직후, 아직 데이터베이스에는 결과가 반영되지 않은 상태를 무엇이라 하는가?","Active","Partially Committed","Committed","Aborted",②,"마지막 연산 직후이지만, 데이터베이스에 영구 반영 전인 상태는 Partially Committed 입니다."
"다음 SQL문에서 한 번에 여러 개의 테이블(예: '학생', '사원', '부서')을 동시에 삭제하고 싶을 때, 올바른 문은?","DROP TABLE 학생, 사원, 부서;","DELETE TABLE 학생, 사원, 부서;","REMOVE TABLE 학생, 사원, 부서;","DELETE FROM 학생, 사원, 부서;",①,"DROP TABLE 명령은 여러 테이블을 콤마(,)로 구분해 한 번에 삭제 가능합니다."
"관계 데이터 모델의 특성으로 옳지 않은 것은?","테이블 내 모든 속성값(필드)은 원자성을 가진다.","동일 릴레이션에서 중복된 튜플이 허용된다.","튜플(행)간의 순서가 없으며, 속성(열)간의 순서도 중요하지 않다.","릴레이션의 각 속성(열)은 유일한 이름을 가져야 한다.",②,"릴레이션은 중복된 튜플(행)이 허용되지 않는 것이 원칙입니다."
"SQL에서 사원 테이블에서 부서가 '영업'인 사원의 평균 연봉(급여)을 구하는 SQL 문은?","SELECT AVG(급여) FROM 사원 WHERE 부서=‘영업’;","SELECT SUM(급여) FROM 사원 WHERE 부서=‘영업’ GROUP BY 부서;","SELECT 급여 FROM 사원 GROUP BY 부서 HAVING 부서=‘영업’;","SELECT COUNT(급여) FROM 사원 WHERE 부서=‘영업’; ",①,"'영업'부서의 평균 급여 구문은 ①번이 맞습니다."
"관계해석에서 전칭 한정자(For All/모든 것에 대하여)를 뜻하는 기호는?","∃","∀","∈","⊆",②,"∀(for all)는 전칭(모든 것) 한정자, ∃ 는 존재 한정자, ∈ 는 포함, ⊆ 부분집합입니다."
"다음 지문은 어떤 데이터베이스 무결성 제약조건을 설명한 것인가?
'릴레이션의 기본키가 되는 속성들은 널 값(Null)이나 중복 값 없이 고유해야 한다.'","참조 무결성","개체 무결성","영역 무결성","사용자 정의 무결성",②,"개체 무결성(Entity Integrity)은 기본키가 Null 또는 중복 없이 반드시 고유해야 함을 뜻합니다."
