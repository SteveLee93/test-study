문제,보기1,보기2,보기3,보기4,정답,해설
"소프트웨어 공학에서 워크스루(Walkthrough)에 대한 설명으로 틀린 것은?","사용사례를 확장하여 명세하거나 설계 다이어그램, 원시 코드, 테스트 케이스 등에 적용할 수 있다.","복잡한 알고리즘 또는 반복, 실시간 동작, 병행 처리와 같은 기능이나 동작을 이해하려고 할 때 유용하다.","인스펙션(Inspection)과 동일한 의미를 가진다.","단순한 테스트 케이스를 이용하여 프로덕트를 수작업으로 수행해 보는 것이다.",③,"워크스루(Walkthrough)는 개발자가 작성한 산출물의 오류를 발견하기 위한 검토 기법 중 하나로, 주로 코드, 설계도, 명세서, 산출물 등을 대상으로 팀원 및 이해관계자가 참여하여 진행합니다. 인스펙션(Inspection)과는 목적, 진행 방식, 참가자 등에서 차이가 있습니다. 두 용어는 동일한 의미가 아닙니다."
"XP(eXtreme Programing)의 5가지 가치로 거리가 먼 것은?","용기","의사소통","정형 분석","피드백",③,"XP(eXtreme Programming)의 5가지 핵심 가치는 용기(Courage), 의사소통(Communication), 피드백(Feedback), 존중(Respect), 단순성(Simplicity)입니다. 정형 분석(Formal Analysis)은 XP의 5대 가치에 포함되지 않습니다."
"메시지 지향 미들웨어(Message-Oriented Middleware, MOM)에 대한 설명으로 틀린 것은?","느리고 안정적인 응답보다는 즉각적인 응답이 필요한 온라인 업무에 적합하다.","독립적인 애플리케이션을 하나의 통합된 시스템으로 묶기 위한 역할을 한다.","송신측과 수신측의 연결 시 메시지 큐를 활용하는 방법이 있다.","상이한 애플리케이션 간 통신을 비동기 방식으로 지원한다.",①,"메시지 지향 미들웨어(MOM)는 느린 응답보다는 안정적 메시지 전달(즉각반응보다는 안정성)에 중점을 두는 미들웨어이며, 비동기 처리를 지원합니다. 즉각적인 응답이 필요한 온라인 업무보다는 대량, 지연 메시지의 안정적 처리가 중요한 업무에 적합합니다."
"자료 흐름도(DFD)를 작성하는데 지침이 될 수 없는 항목은?","자료 흐름은 처리가 거쳐 변환될 때마다 새로운 이름을 부여한다.","어떤 처리가 출력 자료를 산출하기 위해서는 반드시 입력 자료가 발생해야 한다.","자료 저장소에 입력 화살표가 있으면 반드시 출력 화살표도 표시되어야 한다.","상위 단계의 처리와 하위 자료 흐름도의 자료 흐름은 서로 일치되어야 한다.",③,"자료 저장소는 입력(저장)과 출력(인출)이 독립적으로 발생할 수 있습니다. 입력(저장)만 되고 출력(인출)이 아직 일어나지 않을 수도 있으며, 자료 저장소에 입력이 있는 경우 반드시 출력이 있어야 하는 것은 아닙니다. 따라서 ③번 지침은 잘못되었습니다."
"설계 기법 중 하향식 설계 방법과 상향식 설계 방법에 대한 비교 설명으로 가장 옳지 않은 것은?","하향식 설계에서는 통합 검사 시 인터페이스가 이미 정의되어 있어 통합이 간단하다.","하향식 설계에서 레벨이 낮은 데이터 구조의 세부 사항은 설계 초기 단계에서 필요하다.","상향식 설계는 최하위 수준에서 각각의 모듈들을 설계하고 이러한 모듈이 완성되면 이들을 결합하여 검사한다.","상향식 설계에서는 인터페이스가 이미 성립되어 있지 않더라도 기능 추가가 쉽다.",②,"하향식 설계에서는 설계 초기에는 상위 모듈의 구조와 인터페이스, 전반적인 아키텍처에 집중하고, 레벨이 낮은 데이터 구조의 세부 사항은 설계 후반에 작성합니다. 설계 초기 단계에서 낮은 레벨의 세부사항까지 필요하지 않습니다."
"소프트웨어 공학에서 모델링(Modeling)과 관련한 설명으로 틀린 것은?","개발팀이 응용 문제를 이해하는 데 도움을 줄 수 있다.","유지보수 단계에서만 모델링 기법을 활용한다.","개발될 시스템에 대하여 여러 분야의 엔지니어들이 공통된 개념을 공유하는 데 도움을 준다.","절차적인 프로그램을 위한 자료 흐름도는 프로세스 위주의 모델링 방법이다.",②,"모델링 기법은 소프트웨어 개발 생명주기의 전 단계(분석, 설계, 구현, 유지보수)에서 다양하게 활용합니다. 유지보수 단계에서만 쓰이는 것이 아닙니다."
"UML 모델에서 한 객체가 다른 객체에게 오퍼레이션을 수행하도록 지정하는 의미적 관계로 옳은 것은?","Dependency","Realization","Generalization","Association",①,"Dependency(의존)는 한 객체가 다른 객체의 변화에 영향을 받는다는 의미의 관계로, 예컨대 한 클래스가 다른 클래스를 매개변수나 지역변수로 사용하는 의존 관계 등이 대표적입니다. Realization(실현)은 인터페이스와 구현클래스의 관계, Generalization(일반화)은 상속 관계, Association(연관)은 구조적 연결관계입니다."
"분산 시스템을 위한 마스터-슬레이브(Master-Slave) 아키텍처에 대한 설명으로 틀린 것은?","일반적으로 실시간 시스템에서 사용된다.","마스터 프로세스는 일반적으로 연산, 통신, 조정을 책임진다.","슬레이브 프로세스는 데이터 수집 기능을 수행할 수 없다.","마스터 프로세스는 슬레이브 프로세스들을 제어할 수 있다.",③,"슬레이브 프로세스도 데이터 수집, 연산, 장치 제어 등 주요한 기능을 수행할 수 있습니다. (수집 불가란 설명은 틀림)"
"객체지향 분석 방법론 중 Coad-Yourdon 방법에 해당하는 것은?","E-R 다이어그램을 사용하여 객체의 행위를 데이터 모델링하는데 초점을 둔 방법이다.","객체·동적·기능 모델로 나누어 수행하는 방법이다.","미시적 개발 프로세스와 거시적 개발 프로세스를 모두 사용하는 방법이다.","Use-Case를 강조하여 사용하는 방법이다.",①,"Coad-Yourdon 방법은 E-R 다이어그램 중심의 객체 행위 모델링을 강조합니다. 럼바우(Rumbaugh)는 객체/동적/기능 모델, 부치(Booch)는 미시적/거시적 프로세스, Jacobson은 유스케이스(Use Case)를 강조합니다."
"자료 흐름도(DFD)의 구성 요소에 포함되지 않는 것은?","Process","Data Flow","Data Store","Data Dictionary",④,"자료 흐름도(DFD)의 4대 구성 요소는 Process, Data Flow, Data Store, Terminator(External Entity)입니다. Data Dictionary(자료사전)는 별도의 도구입니다."
"UML의 기본 구성 요소(Things)로 포함되지 않는 것은?","Things","Terminal","Relationship","Diagram",②,"UML의 Things(사물)는 구조 사물, 행동 사물 등으로 구분되며, Terminals는 포함되지 않습니다. Relationship(관계), Diagram(다이어그램) 등은 UML 기본 요소에 포함됩니다."
"한 모듈 내의 각 구성 요소들이 공통의 목적을 달성하기 위하여 서로 얼마나 관련이 있는지의 기능적 연관의 정도를 나타내는 것은?","Cohesion","Coupling","Structure","Unity",①,"Cohesion(응집도)는 모듈 내 구성요소들이 얼마나 관련있는지(내부 일체성), Coupling(결합도)는 외부 다른 모듈과의 연결정도입니다."
"객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?","트랜잭션","클래스","시퀀스","서브루틴",②,"클래스(Class)는 유사한 속성과 연산을 가지는 객체들의 집합 또는 유형입니다."
"설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?","유효성","직관성","무결성","유연성",②,"직관성(Intuitiveness)은 사용자가 어렵지 않게 기능을 이해·이용할 수 있게 하는 UI의 설계 원칙입니다."
"DOS 및 UNIX 등의 운영체제에서 조작을 위해 사용하던 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?","GUI(Graphical User Interface)","CLI(Command Line Interface)","CUI(Cell User Interface)","MUI(Mobile User Interface)",②,"정해진 명령 문자열(커맨드라인)로 시스템을 조작하는 것은 CLI(Command Line Interface)입니다."
"애자일(Agile) 소프트웨어 개발에 대한 설명으로 틀린 것은?","공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.","동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.","계약 협상보다는 고객과의 협력을 가치 있게 여긴다.","계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다.",②,"애자일 방식에서는 동작하는 소프트웨어를 문서보다 더 가치 있게 여깁니다."
"디자인 패턴을 생성/구조/행동 패턴의 세 그룹으로 분류할 때, 구조 패턴이 아닌 것은?","Adapter 패턴","Bridge 패턴","Builder 패턴","Proxy 패턴",③,"Builder 패턴은 생성(Creational) 패턴입니다. 구조(Structural) 패턴에는 Adapter, Bridge, Proxy 등이 있습니다."
"코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?","연상 코드","블록 코드","순차 코드","표의 숫자 코드",③,"순차 코드(Serial Code)는 항목 생성 순서에 따라 일련번호를 부여하는 부여 방식입니다."
"입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?","EAI","FEP","GPL","Duplexing",②,"FEP(Front-End Processor)는 본처리장치에 앞서 입력 데이터를 미리 처리하여 주 프로세서의 부담을 덜어주는 장치입니다."
"소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?","파이프-필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.","외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.","데이터 중심 아키텍처는 공유 데이터 저장소를 통해 접근자 간의 통신이 이루어지므로 각 접근자의 수정과 확장이 용이하다.","이해 관계자들의 품질 요구사항을 반영하여 품질 속성을 결정한다.",①,"파이프-필터(Pipe-Filter) 아키텍처에서 데이터 흐름은 일반적으로 단방향이며, 필터 이동 시 오버헤드(비용)가 발생할 수 있습니다. 양방향 흐름, 오버헤드 없음은 올바른 설명이 아닙니다."
